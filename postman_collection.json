{
	"info": {
		"_postman_id": "recommender-system-api",
		"name": "Recommender System API",
		"description": "Comprehensive API collection for the Collaborative Filtering Recommender System with Redis vector database",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "recommender-system"
	},
	"item": [
		{
			"name": "Health & Status",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health",
								""
							]
						},
						"description": "Check the health status of the recommender service and Redis connection"
					},
					"response": [
						{
							"name": "Healthy Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/health/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"health",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"healthy\",\n  \"redis_connected\": true,\n  \"timestamp\": \"2025-09-24T19:09:23.838752\"\n}"
						}
					]
				},
				{
					"name": "Root Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						},
						"description": "Get basic information about the API service"
					},
					"response": [
						{
							"name": "API Info",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Recommender Service API\",\n  \"version\": \"1.0.0\",\n  \"docs\": \"/docs\"\n}"
						}
					]
				}
			],
			"description": "Health check and service status endpoints"
		},
		{
			"name": "Recommendations",
			"item": [
				{
					"name": "Get Popular Items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/popular-items?limit={{popular_limit}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"popular-items"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{popular_limit}}",
									"description": "Maximum number of popular items to return (1-100)"
								}
							]
						},
						"description": "Get the most frequently purchased items based on historical data"
					},
					"response": [
						{
							"name": "Popular Items Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/popular-items?limit=5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"popular-items"
									],
									"query": [
										{
											"key": "limit",
											"value": "5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"recommendations\": [\n    {\n      \"item_name\": \"PID\",\n      \"similarity_score\": 1.0,\n      \"reason\": \"Popular item (purchased 30245 times)\",\n      \"popularity_rank\": 1\n    },\n    {\n      \"item_name\": \"Water Level Meter\",\n      \"similarity_score\": 0.9772855017358241,\n      \"reason\": \"Popular item (purchased 29558 times)\",\n      \"popularity_rank\": 2\n    },\n    {\n      \"item_name\": \"Cal Kit - Std - 34L Regulator 100PPM/Tedlar Bag\",\n      \"similarity_score\": 0.759629690857993,\n      \"reason\": \"Popular item (purchased 22975 times)\",\n      \"popularity_rank\": 3\n    }\n  ],\n  \"metadata\": {\n    \"limit\": 5,\n    \"total_recommendations\": 5\n  }\n}"
						}
					]
				},
				{
					"name": "Get Similar Items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/similar-items/{{item_name}}?limit={{similar_limit}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"similar-items",
								"{{item_name}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{similar_limit}}",
									"description": "Maximum number of similar items to return (1-20)"
								}
							]
						},
						"description": "Find items that are frequently co-purchased with the specified item"
					},
					"response": [
						{
							"name": "Similar Items Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/similar-items/PID?limit=3",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"similar-items",
										"PID"
									],
									"query": [
										{
											"key": "limit",
											"value": "3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"recommendations\": [\n    {\n      \"item_name\": \"Cal Kit - Std - 34L Regulator 100PPM/Tedlar Bag\",\n      \"similarity_score\": 1.0,\n      \"reason\": \"Frequently purchased together (17951 times)\",\n      \"popularity_rank\": null\n    },\n    {\n      \"item_name\": \"Water Level Meter\",\n      \"similarity_score\": 0.4525653166954487,\n      \"reason\": \"Frequently purchased together (8124 times)\",\n      \"popularity_rank\": null\n    },\n    {\n      \"item_name\": \"Gloves\",\n      \"similarity_score\": 0.2010472954152972,\n      \"reason\": \"Frequently purchased together (3609 times)\",\n      \"popularity_rank\": null\n    }\n  ],\n  \"metadata\": {\n    \"item_name\": \"PID\",\n    \"limit\": 3,\n    \"total_recommendations\": 3\n  }\n}"
						}
					]
				},
				{
					"name": "Get Basket Recommendations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    \"{{basket_item_1}}\",\n    \"{{basket_item_2}}\"\n  ],\n  \"limit\": {{basket_limit}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/basket-recommendations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"basket-recommendations"
							]
						},
						"description": "Get recommendations for a basket of items (real-time collaborative filtering)"
					},
					"response": [
						{
							"name": "Basket Recommendations Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"items\": [\n    \"PID\",\n    \"Water Level Meter\"\n  ],\n  \"limit\": 3\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/v1/basket-recommendations",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"basket-recommendations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"recommendations\": [\n    {\n      \"item_name\": \"Cal Kit - Std - 34L Regulator 100PPM/Tedlar Bag\",\n      \"similarity_score\": 0.759629690857993,\n      \"reason\": \"Popular item (purchased 22975 times)\",\n      \"popularity_rank\": 3\n    },\n    {\n      \"item_name\": \"YSI\",\n      \"similarity_score\": 0.617490494296578,\n      \"reason\": \"Popular item (purchased 18676 times)\",\n      \"popularity_rank\": 4\n    },\n    {\n      \"item_name\": \"Horiba\",\n      \"similarity_score\": 0.5060340552157382,\n      \"reason\": \"Popular item (purchased 15305 times)\",\n      \"popularity_rank\": 5\n    }\n  ],\n  \"metadata\": {\n    \"basket_items\": [\n      \"PID\",\n      \"Water Level Meter\"\n    ],\n    \"limit\": 3,\n    \"total_recommendations\": 3\n  }\n}"
						}
					]
				},
				{
					"name": "Get Order Recommendations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/recommendations/{{order_id}}?limit={{order_limit}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"recommendations",
								"{{order_id}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{order_limit}}",
									"description": "Maximum number of recommendations to return (1-50)"
								}
							]
						},
						"description": "Get recommendations for a specific order ID"
					},
					"response": [
						{
							"name": "Order Recommendations Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/v1/recommendations/12345?limit=5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"recommendations",
										"12345"
									],
									"query": [
										{
											"key": "limit",
											"value": "5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"recommendations\": [\n    {\n      \"item_name\": \"PID\",\n      \"similarity_score\": 1.0,\n      \"reason\": \"Popular item (purchased 30245 times)\",\n      \"popularity_rank\": 1\n    },\n    {\n      \"item_name\": \"Water Level Meter\",\n      \"similarity_score\": 0.9772855017358241,\n      \"reason\": \"Popular item (purchased 29558 times)\",\n      \"popularity_rank\": 2\n    }\n  ],\n  \"metadata\": {\n    \"order_id\": \"12345\",\n    \"limit\": 5,\n    \"total_recommendations\": 2\n  }\n}"
						}
					]
				}
			],
			"description": "Core recommendation endpoints for the collaborative filtering system"
		},
		{
			"name": "Test Scenarios",
			"item": [
				{
					"name": "Test Popular Items - Small Limit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/popular-items?limit=3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"popular-items"
							],
							"query": [
								{
									"key": "limit",
									"value": "3"
								}
							]
						},
						"description": "Test with small limit to verify top items"
					}
				},
				{
					"name": "Test Popular Items - Large Limit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/popular-items?limit=20",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"popular-items"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								}
							]
						},
						"description": "Test with larger limit to get more diverse recommendations"
					}
				},
				{
					"name": "Test Similar Items - Top Item",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/similar-items/PID?limit=5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"similar-items",
								"PID"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Test similar items for the most popular item (PID)"
					}
				},
				{
					"name": "Test Similar Items - Common Item",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/similar-items/Water%20Level%20Meter?limit=5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"similar-items",
								"Water Level Meter"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Test similar items for a common item (Water Level Meter)"
					}
				},
				{
					"name": "Test Basket - Two Popular Items",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    \"PID\",\n    \"Water Level Meter\"\n  ],\n  \"limit\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/basket-recommendations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"basket-recommendations"
							]
						},
						"description": "Test basket recommendations with two popular items"
					}
				},
				{
					"name": "Test Basket - Three Items",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    \"PID\",\n    \"Cal Kit - Std - 34L Regulator 100PPM/Tedlar Bag\",\n    \"Gloves\"\n  ],\n  \"limit\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/basket-recommendations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"basket-recommendations"
							]
						},
						"description": "Test basket recommendations with three items"
					}
				},
				{
					"name": "Test Basket - Single Item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    \"YSI\"\n  ],\n  \"limit\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/basket-recommendations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"basket-recommendations"
							]
						},
						"description": "Test basket recommendations with a single item"
					}
				}
			],
			"description": "Predefined test scenarios for comprehensive API testing"
		},
		{
			"name": "Error Testing",
			"item": [
				{
					"name": "Test Invalid Item Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/similar-items/NonExistentItem?limit=5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"similar-items",
								"NonExistentItem"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Test error handling for non-existent item"
					}
				},
				{
					"name": "Test Invalid Limit - Too High",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/popular-items?limit=1000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"popular-items"
							],
							"query": [
								{
									"key": "limit",
									"value": "1000"
								}
							]
						},
						"description": "Test validation for limit parameter (should be capped at 100)"
					}
				},
				{
					"name": "Test Invalid Limit - Zero",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/popular-items?limit=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"popular-items"
							],
							"query": [
								{
									"key": "limit",
									"value": "0"
								}
							]
						},
						"description": "Test validation for zero limit (should return error)"
					}
				},
				{
					"name": "Test Empty Basket",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [],\n  \"limit\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/basket-recommendations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"basket-recommendations"
							]
						},
						"description": "Test error handling for empty basket"
					}
				},
				{
					"name": "Test Invalid JSON",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\"PID\"],\n  \"limit\": 5\n  // Invalid JSON comment\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/basket-recommendations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"basket-recommendations"
							]
						},
						"description": "Test error handling for malformed JSON"
					}
				}
			],
			"description": "Error scenarios and edge cases for API testing"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set default values if not already set",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://localhost:8000');",
					"}",
					"",
					"if (!pm.environment.get('popular_limit')) {",
					"    pm.environment.set('popular_limit', '10');",
					"}",
					"",
					"if (!pm.environment.get('similar_limit')) {",
					"    pm.environment.set('similar_limit', '5');",
					"}",
					"",
					"if (!pm.environment.get('basket_limit')) {",
					"    pm.environment.set('basket_limit', '10');",
					"}",
					"",
					"if (!pm.environment.get('order_limit')) {",
					"    pm.environment.set('order_limit', '10');",
					"}",
					"",
					"if (!pm.environment.get('item_name')) {",
					"    pm.environment.set('item_name', 'PID');",
					"}",
					"",
					"if (!pm.environment.get('order_id')) {",
					"    pm.environment.set('order_id', '12345');",
					"}",
					"",
					"if (!pm.environment.get('basket_item_1')) {",
					"    pm.environment.set('basket_item_1', 'PID');",
					"}",
					"",
					"if (!pm.environment.get('basket_item_2')) {",
					"    pm.environment.set('basket_item_2', 'Water Level Meter');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Common test scripts for all requests",
					"",
					"// Test response time",
					"pm.test('Response time is less than 1000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(1000);",
					"});",
					"",
					"// Test response status",
					"pm.test('Response status is successful', function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
					"});",
					"",
					"// Test response headers",
					"pm.test('Response has Content-Type header', function () {",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
					"});",
					"",
					"// Test response body is valid JSON",
					"pm.test('Response body is valid JSON', function () {",
					"    pm.response.to.be.json;",
					"});",
					"",
					"// Test response structure for recommendation endpoints",
					"if (pm.request.url.path.includes('popular-items') || ",
					"    pm.request.url.path.includes('similar-items') || ",
					"    pm.request.url.path.includes('basket-recommendations') || ",
					"    pm.request.url.path.includes('recommendations/')) {",
					"    ",
					"    pm.test('Response has recommendations array', function () {",
					"        const jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('recommendations');",
					"        pm.expect(jsonData.recommendations).to.be.an('array');",
					"    });",
					"    ",
					"    pm.test('Response has metadata', function () {",
					"        const jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('metadata');",
					"    });",
					"    ",
					"    pm.test('Each recommendation has required fields', function () {",
					"        const jsonData = pm.response.json();",
					"        if (jsonData.recommendations && jsonData.recommendations.length > 0) {",
					"            jsonData.recommendations.forEach((rec, index) => {",
					"                pm.expect(rec).to.have.property('item_name');",
					"                pm.expect(rec).to.have.property('similarity_score');",
					"                pm.expect(rec).to.have.property('reason');",
					"                pm.expect(rec.similarity_score).to.be.a('number');",
					"                pm.expect(rec.similarity_score).to.be.at.least(0);",
					"                pm.expect(rec.similarity_score).to.be.at.most(1);",
					"            });",
					"        }",
					"    });",
					"}",
					"",
					"// Test health endpoint",
					"if (pm.request.url.path.includes('health')) {",
					"    pm.test('Health check response structure', function () {",
					"        const jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('status');",
					"        pm.expect(jsonData).to.have.property('redis_connected');",
					"        pm.expect(jsonData).to.have.property('timestamp');",
					"        pm.expect(jsonData.status).to.be.oneOf(['healthy', 'unhealthy']);",
					"        pm.expect(jsonData.redis_connected).to.be.a('boolean');",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string",
			"description": "Base URL for the recommender API"
		},
		{
			"key": "popular_limit",
			"value": "10",
			"type": "string",
			"description": "Default limit for popular items endpoint"
		},
		{
			"key": "similar_limit",
			"value": "5",
			"type": "string",
			"description": "Default limit for similar items endpoint"
		},
		{
			"key": "basket_limit",
			"value": "10",
			"type": "string",
			"description": "Default limit for basket recommendations"
		},
		{
			"key": "order_limit",
			"value": "10",
			"type": "string",
			"description": "Default limit for order recommendations"
		},
		{
			"key": "item_name",
			"value": "PID",
			"type": "string",
			"description": "Default item name for testing"
		},
		{
			"key": "order_id",
			"value": "12345",
			"type": "string",
			"description": "Default order ID for testing"
		},
		{
			"key": "basket_item_1",
			"value": "PID",
			"type": "string",
			"description": "First item for basket testing"
		},
		{
			"key": "basket_item_2",
			"value": "Water Level Meter",
			"type": "string",
			"description": "Second item for basket testing"
		}
	]
}
